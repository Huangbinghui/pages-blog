import{_ as s,c as a,o as i,a2 as t}from"./chunks/framework.ClDkF6YQ.js";const E=JSON.parse('{"title":"程序与页面","description":"","frontmatter":{},"headers":[],"relativePath":"articles/frontend/miniProgram/入门.md","filePath":"articles/frontend/miniProgram/入门.md"}'),e={name:"articles/frontend/miniProgram/入门.md"},l=t(`<h1 id="程序与页面" tabindex="-1">程序与页面 <a class="header-anchor" href="#程序与页面" aria-label="Permalink to &quot;程序与页面&quot;">​</a></h1><h2 id="app-json" tabindex="-1"><code>app.json</code> <a class="header-anchor" href="#app-json" aria-label="Permalink to &quot;\`app.json\`&quot;">​</a></h2><h3 id="pages" tabindex="-1">pages <a class="header-anchor" href="#pages" aria-label="Permalink to &quot;pages&quot;">​</a></h3><p>pages配置所有页面路径。写在 <code>pages</code> 数组的第一个页面就是这个小程序的首页（打开小程序看到的第一个页面）。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;pages/index/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;pages/logs/logs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="app-js" tabindex="-1">app.js <a class="header-anchor" href="#app-js" aria-label="Permalink to &quot;app.js&quot;">​</a></h2><p>小程序启动后<code>app.js</code>定义的App实例的<code>onLaunch</code>回调会被执行：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onLaunch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 小程序启动之后 触发</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>整个小程序只有一个 App 实例，是全部页面共享的.</p><h3 id="页面下的js" tabindex="-1">页面下的js <a class="header-anchor" href="#页面下的js" aria-label="Permalink to &quot;页面下的js&quot;">​</a></h3><p>小程序加载页面时，先读取<code>index.json</code>的页面配置，再装载<code>index.wxml</code>和<code>index.wxss</code>，最后装载js文件。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 参与页面渲染的数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    logs: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 页面渲染后 执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><code>Page</code> 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 <code>data</code> 数据和 <code>index.wxml</code> 一起渲染出最终的结构.在渲染完界面之后，页面实例就会收到一个 <code>onLoad</code> 的回调，你可以在这个回调处理你的逻辑。</p><h1 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h1><p>小程序提供了丰富的基础组件给开发者，例如，你需要在界面上显示地图，你只需要这样写即可：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><p>提供给开发者调起微信提供的能力</p><p>要获取用户的地理位置时，只需要：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wgs84&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> latitude </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.latitude </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 纬度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> longitude </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.longitude </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 经度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>调用微信扫一扫能力，只需要：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>需要注意的是：多数 API 的回调都是异步，你需要处理好代码逻辑的异步问题。</p><h1 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h1><p>小程序主体部分</p><table><thead><tr><th style="text-align:left;">文件</th><th style="text-align:left;">必需</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/app.html" target="_blank" rel="noreferrer">app.js</a></td><td style="text-align:left;">是</td><td style="text-align:left;">小程序逻辑</td></tr><tr><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/config.html" target="_blank" rel="noreferrer">app.json</a></td><td style="text-align:left;">是</td><td style="text-align:left;">小程序公共配置</td></tr><tr><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html" target="_blank" rel="noreferrer">app.wxss</a></td><td style="text-align:left;">否</td><td style="text-align:left;">小程序公共样式表</td></tr></tbody></table><p>小程序页面</p><table><thead><tr><th style="text-align:left;">文件类型</th><th style="text-align:left;">必需</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html" target="_blank" rel="noreferrer">js</a></td><td style="text-align:left;">是</td><td style="text-align:left;">页面逻辑</td></tr><tr><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/" target="_blank" rel="noreferrer">wxml</a></td><td style="text-align:left;">是</td><td style="text-align:left;">页面结构</td></tr><tr><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE" target="_blank" rel="noreferrer">json</a></td><td style="text-align:left;">否</td><td style="text-align:left;">页面配置</td></tr><tr><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html" target="_blank" rel="noreferrer">wxss</a></td><td style="text-align:left;">否</td><td style="text-align:left;">页面样式表</td></tr></tbody></table><p><strong>注意：为了方便开发者减少配置项，描述页面的四个文件必须具有相同的路径与文件名。</strong></p><h2 id="允许上传的文件" tabindex="-1">允许上传的文件 <a class="header-anchor" href="#允许上传的文件" aria-label="Permalink to &quot;允许上传的文件&quot;">​</a></h2><p>只有后缀名在白名单内的文件可以被上传，不在白名单列表内文件在开发工具能被访问到，但无法被上传。具体白名单列表如下：</p><ol><li><code>wxs</code></li><li><code>png</code></li><li><code>jpg</code></li><li><code>jpeg</code></li><li><code>gif</code></li><li><code>svg</code></li><li><code>json</code></li><li><code>cer</code></li><li><code>mp3</code></li><li><code>aac</code></li><li><code>m4a</code></li><li><code>mp4</code></li><li><code>wav</code></li><li><code>ogg</code></li><li><code>silk</code></li><li><code>wasm</code></li><li><code>br</code></li><li><code>cert</code></li></ol>`,32),n=[l];function p(h,d,r,k,o,c){return i(),a("div",null,n)}const y=s(e,[["render",p]]);export{E as __pageData,y as default};
