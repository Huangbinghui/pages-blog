import{_ as l,c as d,o as n,a2 as r,m as t,a as e}from"./chunks/framework.ClDkF6YQ.js";const m=JSON.parse('{"title":"POSIX基础正则表达式（basic regular expression，BRE）","description":"","frontmatter":{},"headers":[],"relativePath":"articles/CS/Linux/文本处理/正则表达式.md","filePath":"articles/CS/Linux/文本处理/正则表达式.md"}'),a={name:"articles/CS/Linux/文本处理/正则表达式.md"},s=r('<h1 id="posix基础正则表达式-basic-regular-expression-bre" tabindex="-1">POSIX基础正则表达式（basic regular expression，BRE） <a class="header-anchor" href="#posix基础正则表达式-basic-regular-expression-bre" aria-label="Permalink to &quot;POSIX基础正则表达式（basic regular expression，BRE）&quot;">​</a></h1><h2 id="特殊字符" tabindex="-1">特殊字符 <a class="header-anchor" href="#特殊字符" aria-label="Permalink to &quot;特殊字符&quot;">​</a></h2><p><code>.*[]^${}\\+?|()</code>使用特殊字符作为文本时需要用反斜线（<code>\\</code>）转义。</p><h2 id="正则表达式字符" tabindex="-1">正则表达式字符 <a class="header-anchor" href="#正则表达式字符" aria-label="Permalink to &quot;正则表达式字符&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">字符</th><th style="text-align:center;">用途</th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;">^</td><td style="text-align:center;">脱字符（^）定义了行首锚点</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">$</td><td style="text-align:center;">美元符（$）定义了行尾锚点</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">点号用来匹配除换行符之外的任意单个字符</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">[abc]</td><td style="text-align:center;">字符组中的某个字符出现在了数据流中，那它就匹配了该模式。</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">[^]</td><td style="text-align:center;">排除型字符组</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">[0-9]</td><td style="text-align:center;">区间</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">匹配模式的文本中出现0次或多次</td><td style="text-align:center;"></td></tr></tbody></table><h2 id="特殊字符组" tabindex="-1">特殊字符组 <a class="header-anchor" href="#特殊字符组" aria-label="Permalink to &quot;特殊字符组&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">组</th><th style="text-align:center;">描述</th><th></th></tr></thead><tbody><tr><td style="text-align:center;">[[:alpha:]]</td><td style="text-align:center;">匹配任意字母字符，不管是大写还是小写</td><td></td></tr><tr><td style="text-align:center;">[[:alnum:]]</td><td style="text-align:center;">匹配任意字母数字字符0-9、A-Z或a-z</td><td></td></tr><tr><td style="text-align:center;">[[:blank:]]</td><td style="text-align:center;">匹配空格或制表符</td><td></td></tr><tr><td style="text-align:center;">[[:digit:]]</td><td style="text-align:center;">匹配0~9之间的数字</td><td></td></tr><tr><td style="text-align:center;">[[:lower:]]</td><td style="text-align:center;">匹配小写字母字符a~z</td><td></td></tr><tr><td style="text-align:center;">[[:upper:]]</td><td style="text-align:center;">匹配任意大写字母字符A~Z</td><td></td></tr><tr><td style="text-align:center;">[[:print:]]</td><td style="text-align:center;">匹配任意可打印字符</td><td></td></tr><tr><td style="text-align:center;">[[:punct:]]</td><td style="text-align:center;">匹配标点符号</td><td></td></tr><tr><td style="text-align:center;">[[:space:]]</td><td style="text-align:center;">匹配任意空白字符：空格、制表符、NL、FF、VT和CR</td><td></td></tr><tr><td style="text-align:center;">\\d</td><td style="text-align:center;">表示匹配任意一个数字，相当于字符范围 <code>[0-9]</code> 的简写形式</td><td></td></tr><tr><td style="text-align:center;">\\w</td><td style="text-align:center;">表示匹配任意一个单词字符（字母、数字或下划线），相当于字符范围 <code>[a-zA-Z0-9_]</code> 的简写形式</td><td></td></tr><tr><td style="text-align:center;">\\W</td><td style="text-align:center;">匹配任意一个非单词字符（非字母、数字或下划线），相当于字符范围 <code>[^a-zA-Z0-9_]</code> 的简写形式</td><td></td></tr><tr><td style="text-align:center;">\\s</td><td style="text-align:center;">表示匹配任意一个空白字符（包括空格、制表符、换行符等）</td><td></td></tr><tr><td style="text-align:center;">\\S</td><td style="text-align:center;">匹配任何非空白字符。等价于 <code>[ ^ \\f\\n\\r\\t\\v ]</code>。</td><td></td></tr></tbody></table><h1 id="posix扩展正则表达式-extended-regular-expression-ere" tabindex="-1">POSIX扩展正则表达式（extended regular expression，ERE） <a class="header-anchor" href="#posix扩展正则表达式-extended-regular-expression-ere" aria-label="Permalink to &quot;POSIX扩展正则表达式（extended regular expression，ERE）&quot;">​</a></h1><p>POSIX ERE模式包括了一些可供Linux应用和工具使用的额外符号。gawk程序能够识别ERE 模式，但sed编辑器不能。</p><h2 id="正则表达式字符-1" tabindex="-1">正则表达式字符 <a class="header-anchor" href="#正则表达式字符-1" aria-label="Permalink to &quot;正则表达式字符&quot;">​</a></h2>',10),i=t("table",null,[t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"符号"),t("th",{style:{"text-align":"center"}},"描述"),t("th")])]),t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"center"}},"？"),t("td",{style:{"text-align":"center"}},[e("匹配字符出现0次或1次。当 "),t("code",null,"?"),e(" 跟在量词 "),t("code",null,"*"),e("、"),t("code",null,"+"),e("、"),t("code",null,"?"),e("、"),t("code",null,"{}"),e(" 后面时，它将使量词变为非贪婪匹配。")]),t("td",null,[e("例如，正则表达式 "),t("code",null,"a.*?b"),e(' 将匹配 "aabab" 中的 "aab"，而不是贪婪匹配的 "aabab"。')])]),t("tr",null,[t("td",{style:{"text-align":"center"}},"+"),t("td",{style:{"text-align":"center"}},"匹配字符出现1次或多次"),t("td")]),t("tr",null,[t("td",{style:{"text-align":"center"},m:""}),t("td",{style:{"text-align":"center"}},"m：正则表达式准确出现m次"),t("td")]),t("tr",null,[t("td",{style:{"text-align":"center"},"m,n":""}),t("td",{style:{"text-align":"center"}},"m, n：正则表达式至少出现m次，至多n次"),t("td")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"expr1|expr2|..."),t("td",{style:{"text-align":"center"}},"用逻辑OR方式指定正则表达式引擎要用的两个或多个模 式"),t("td")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"()"),t("td",{style:{"text-align":"center"}},"表达式分组"),t("td")])])],-1),c=t("h1",{id:"零宽断言",tabindex:"-1"},[e("零宽断言 "),t("a",{class:"header-anchor",href:"#零宽断言","aria-label":'Permalink to "零宽断言"'},"​")],-1),x=[s,i,c];function o(g,y,h,u,b,_){return n(),d("div",null,x)}const P=l(a,[["render",o]]);export{m as __pageData,P as default};
